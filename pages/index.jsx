import Head from 'next/head'
import Link from "next/link";

import dbConnect from '../config/dbConfig';
import Movie from '../models/movie';


export default function Home({ movies }) {
  console.log(movies)

  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container">
        <h1>Movies</h1>
        <Link href="/new">
          <a className="btn btn-primary w-100 mb-2">Agregar</a>
        </Link>
        {/*si le pongo parentesis hace el return, si le pongo {} no retona y no funciona*/}
        {movies.map(({ _id, title, plot }) => (
          <div className="card mb-2" key={_id}>
            <div className="card-body">
              <div className="h5 text-uppercase">
                {title}
              </div>
              <p className="fw-light">
                {plot}
              </p>
              <Link href={`/${_id}`}>
                <a className="btn btn-success btn-sm">Más info...</a>
              </Link>
            </div>
          </div>
        ))}
      </main>

    </div>
  )
}

// si o si para que funcione hay  que hacer el return {props: {xxxx:xxxx}}

//como el _id de mongo es un número, lo vamos a convertir a string
export async function getServerSideProps() {
  try {
    await dbConnect()
    const res = await Movie.find({})
    // console.log(res)

    const movies = res.map(item => {
      const oneMovie = item.toObject() //guardo en onMovie un obj clave-valor
      // console.log(oneMovie)

      //oneMovie._id = `${oneMovie._id}` esta sintaxis convierte un number en string, es lo mismo que la siguiente línea

      oneMovie._id = oneMovie._id.toString() //convierte a string

      return oneMovie //muy importante el return!!!!

    })


    return {
      props: { movies: movies }
    }
  }
  catch (err) {
    console.log(err)
  }


}
